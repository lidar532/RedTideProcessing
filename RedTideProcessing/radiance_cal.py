# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/40_Radiance_Cal.ipynb.

# %% auto 0
__all__ = ['radcal', 'read_radiance_calibration_file', 'radiance_distance_scale_factor']

# %% ../nbs/40_Radiance_Cal.ipynb 7
import numpy  as np
import pandas as pd

# %% ../nbs/40_Radiance_Cal.ipynb 11
def radcal(
  spectra:object,   # A hab_spectra object containing the y_raw spectra, wavelengths
  cal_data:object   # The calibration data object.
) ->object:         # A numpy array of radiance calibrated values.
  '''
  Calibrate a spectra for radiance.
  '''
  exp = spectra.Exposure
  y_calibrated = ( spectra.raw_y - cal_data.dark[exp]) * cal_data.scale[exp]
  return y_calibrated
  

# %% ../nbs/40_Radiance_Cal.ipynb 13
def read_radiance_calibration_file(
  wavelengths, # Numpy array of wavelengths to interpolate too.
  rad_cal_fn   # Radiance Calibration File Name
) -> object:   # Numpy array of interpolated irradiance data.
  '''
  Reads a two column csv irradiance calibration file where the first 
  column is 'Wavelength', and the second 'Irradiance'. It returns an
  interpolated numpy array that matches the the `wavelengths` parameter.
  '''
  rad_cal_pd = pd.read_csv( rad_cal_fn, sep=',', comment='#' )
  y_values = np.interp( wavelengths, rad_cal_pd['Wavelength'], rad_cal_pd['Irradiance'])
  return y_values

# %% ../nbs/40_Radiance_Cal.ipynb 16
def radiance_distance_scale_factor( 
  distance_m, 
  cal_distance_m=0.5
) -> float:
  '''
  Calculate the radiance scale factor for given distance (meters) from
  the QTH bulb to the broadband reflector.
  '''
  scale = cal_distance_m**2 / distance_m**2
  return scale
